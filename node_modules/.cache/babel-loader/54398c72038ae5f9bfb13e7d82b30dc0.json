{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryanwerner/Projects/books_frontend/src/components/new_book_form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addBook } from '../actions/add_book';\n\nclass NewBookForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      author: \"\",\n      status: \"\"\n    };\n\n    this.changeHandler = e => {\n      this.setState(() => ({\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state); // fetch('http://localhost:3000/books', {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //         'Accept': 'application/json'\n      //     },\n      //     body: JSON.stringify(this.state)\n      // }).then(resp => resp.json())\n      // .then(book => {\n      //     this.props.addBook(book)\n      //     this.setState({\n      //         title: \"\",\n      //         author: \"\",\n      //         status: \"\"\n      //     })\n      // })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: this.changeHandler,\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        onChange: this.changeHandler,\n        value: this.state.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Read Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        onChange: this.changeHandler,\n        defaultValue: \"unselected\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unselected\",\n          children: \" -- select an option -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"read\",\n          children: \"Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"reading\",\n          children: \"Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"to_read\",\n          children: \"To Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addBook: book => dispatch(addBook(book))\n  };\n}; // const mapDispatchToProps = {\n//     addbook\n// }\n\n\nexport default connect(null, mapDispatchToProps)(NewBookForm); // export default connect(null, { addBook })(NewBookForm)","map":{"version":3,"sources":["/Users/ryanwerner/Projects/books_frontend/src/components/new_book_form.js"],"names":["React","connect","addBook","NewBookForm","Component","state","title","author","status","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","render","mapDispatchToProps","dispatch","book"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAD8B;;AAAA,SAOtCC,aAPsC,GAOrBC,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc,OACV;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OADU,CAAd;AAGH,KAXqC;;AAAA,SAatCC,aAbsC,GAarBL,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB,EAFmB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAhCqC;AAAA;;AAkCtCc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKJ,aAArB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAE,KAAKN,aAA/C;AAA8D,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC;AAAhF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,QAAQ,EAAE,KAAKG,aAAhD;AAA+D,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE;AAAjF;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,QAAzB;AAAkC,QAAA,QAAQ,EAAE,KAAKE,aAAjD;AAAgE,QAAA,YAAY,EAAC,YAA7E;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAnDqC;;AAsD1C,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHnB,IAAAA,OAAO,EAAEoB,IAAI,IAAID,QAAQ,CAACnB,OAAO,CAACoB,IAAD,CAAR;AADtB,GAAP;AAGH,CAJD,C,CAMA;AACA;AACA;;;AAEA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCjB,WAAlC,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { addBook } from '../actions/add_book'\n\nclass NewBookForm extends React.Component {\n    state = {\n        title: \"\",\n        author: \"\",\n        status: \"\"\n    }\n\n    changeHandler = (e) => {\n        this.setState(() => (\n            {[e.target.name]: e.target.value}\n        ))\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        // fetch('http://localhost:3000/books', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'Accept': 'application/json'\n        //     },\n        //     body: JSON.stringify(this.state)\n        // }).then(resp => resp.json())\n        // .then(book => {\n        //     this.props.addBook(book)\n        //     this.setState({\n        //         title: \"\",\n        //         author: \"\",\n        //         status: \"\"\n        //     })\n        // })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitHandler}>\n                <label>Title</label>\n                <input type='text' name='title' onChange={this.changeHandler} value={this.state.title}/>\n                <label>Author</label>\n                <input type='text' name='author' onChange={this.changeHandler} value={this.state.author}/>\n                <label>Read Status</label>\n                <select name='status' id='status' onChange={this.changeHandler} defaultValue='unselected'>\n                    <option value='unselected' > -- select an option -- </option>\n                    <option value='read'>Read</option>\n                    <option value='reading'>Reading</option>\n                    <option value='to_read'>To Read</option>\n                </select>                \n                <input type='submit'/>\n            </form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addBook: book => dispatch(addBook(book))\n    }\n}\n\n// const mapDispatchToProps = {\n//     addbook\n// }\n\nexport default connect(null, mapDispatchToProps)(NewBookForm)\n// export default connect(null, { addBook })(NewBookForm)"]},"metadata":{},"sourceType":"module"}